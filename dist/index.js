#!/usr/bin/env node

"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var o=require("fs"),s=require("yargs"),r=e(require("aws-sdk")),t=e(require("@aws-amplify/core"));require("@aws-amplify/Auth"),require("@aws-amplify/PubSub");var i=require("@aws-amplify/pubsub/lib/Providers"),n=require("shortid"),a=require("node-fetch"),u=require("ws"),p=require("os"),c=require("path");global.fetch=a,global.navigator={},global.WebSocket=u;const l=e=>{const o=`${e}-${n.generate()}`,s=new i.AWSIoTProvider({clientId:o});t.addPluggable(s)},d=async({room:e,msg:o},s)=>(l(s.identityId),await(async(e,o,s,r)=>{try{return await t.PubSub.publish(`${e}/${s}/${o}`,{msg:r})}catch(e){return e}})(s.params.IdentityPoolId,s.identityId,e,o)),g=e=>{l(e.identityId);try{t.PubSub.subscribe(`${e.params.IdentityPoolId}/#`).subscribe({next:e=>console.log("Message received",e.value),error:e=>console.error("subscribe error",e),close:()=>console.log("Done")})}catch(e){return e}},m=c.join(p.homedir(),".cognitorc"),y=e=>b()[e],b=()=>{let e;return e=o.existsSync(m)?JSON.parse(o.readFileSync(m,"utf8")):{},e};global.fetch=a;const w=async({username:e,password:o},s)=>{t.configure(s),await t.Auth.signIn(e,o);const[i,n]=await Promise.all([t.Auth.currentUserInfo(),t.Auth.currentUserCredentials()]),a={username:i.username,identityId:n.identityId,identityPoolId:n.params.IdentityPoolId};return console.log("authResult - group admins need to accept users with this info",a),r.config=new r.Config({credentials:n,region:s.aws_project_region}),n};s.scriptName("aws-iot").usage("$0 <cmd> [args]").command("signup","",e=>{e.option("key",{type:"string",alias:"k",default:"default",describe:"the key of the config"}).option("usr",{type:"string",alias:"u",describe:"Cognito Userpool Username"}).option("pwd",{type:"string",alias:"p",describe:"Cognito Userpool User Password"}).option("email",{type:"string",alias:"e",describe:"Cognito Userpool User Email"})},e=>{const o=y(e.key);(async({username:e,password:o,email:s},r)=>{t.configure(r);await t.Auth.signUp({username:e,password:o,attributes:{email:s}}).then(e=>console.log(e)).catch(e=>console.log(e))})({username:e.usr,password:e.pwd,email:e.email},o)}).example("$0 signup --usr user --pwd pass --email abc@example.com --key default","").command("confirm","",e=>{e.option("key",{type:"string",alias:"k",default:"default",describe:"the key of the config"}).option("usr",{type:"string",alias:"u",describe:"Cognito Userpool Username"}).option("code",{type:"string",alias:"c",describe:"Cognito Userpool User Confirmation Code"})},e=>{const o=y(e.key);(async({username:e,code:o},s)=>{t.configure(s),t.Auth.confirmSignUp(e,o,{forceAliasCreation:!0}).then(e=>console.log(e)).catch(e=>console.log(e))})({username:e.usr,code:e.code},o)}).example("$0 confirm --usr user --code 123456 --key default","").command("sub","",e=>{e.option("key",{type:"string",alias:"k",default:"default",describe:"the key of the config"}).option("usr",{type:"string",alias:"u",describe:"Cognito Userpool Username"}).option("pwd",{type:"string",alias:"p",describe:"Cognito Userpool User Password"})},e=>{const o=y(e.key);e.usr&&e.pwd?w({username:e.usr,password:e.pwd},o).then(e=>g(e)).catch(e=>{console.error(e)}):w({username:o.usr,password:o.pwd},o).then(e=>g(e)).catch(e=>{console.error(e)})}).example("$0 sub -u user -p pass -k default","").example("$0 sub -k default","").command("pub","",e=>{e.option("key",{type:"string",alias:"k",default:"default",describe:"the key of the config"}).option("usr",{type:"string",alias:"u",describe:"Cognito Userpool Username"}).option("pwd",{type:"string",alias:"p",describe:"Cognito Userpool User Password"}).option("room",{type:"string",alias:"r",describe:"Room to publish to"}).option("msg",{type:"string",alias:"m",describe:"Message to publish"})},e=>{const o=y(e.key);e.usr&&e.pwd?w({username:e.usr,password:e.pwd},o).then(o=>d({room:e.room,msg:e.msg},o)).then(e=>{console.log("pub:",e),process.exit()}).catch(e=>{console.error(e)}):w({username:o.usr,password:o.pwd},o).then(o=>d({room:e.room,msg:e.msg},o)).then(e=>{console.log("pub:",e),process.exit()}).catch(e=>{console.error(e)})}).example("$0 pub -u user -p pass -r myroom -m msg -k default","").example("$0 pub -r myroom -m msg -k default","").command("config","",e=>{e.option("set",{type:"string",alias:"s",describe:"the config json"}).option("key",{type:"string",alias:"k",default:"default",describe:"the key of the config"}).option("usr",{type:"string",alias:"u",describe:"Cognito Userpool Username"}).option("pwd",{type:"string",alias:"p",describe:"Cognito Userpool User Password"})},e=>{(e=>{const s={usr:e.usr,pwd:e.pwd,aws_user_pools_web_client_id:e.aws_user_pools_web_client_id,aws_user_pools_id:e.aws_user_pools_id,aws_cognito_region:e.aws_cognito_region,aws_cognito_identity_pool_id:e.aws_cognito_identity_pool_id,aws_pubsub_endpoint:e.aws_pubsub_endpoint,aws_pubsub_region:e.aws_pubsub_region,aws_project_region:e.aws_project_region};let r=b();r[e.key]=s;const t=JSON.stringify(r);o.writeFileSync(m,t)})(e)}).example("$0 config --set aws-exports.json","").example("$0 config --set aws-exports.json --key default --usr user --pwd pass","").config("set","configuration",(function(e){return JSON.parse(o.readFileSync(e,"utf-8"))})).version().help().argv;
